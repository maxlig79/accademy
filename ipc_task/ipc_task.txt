Implement 2 c++ applications communicating together using boost::interprocess::message_queue and boost::interprocess::managed_shared_memory.

Client application:

  INFO: Sends commands read from command line to server applicationusing message_queue, 
  reads the result back from the shared memory and prints it to console

  1. Reads a command from command line, converts it to MessageQueueRequest(see common requirements) and sends the struct using message_queue
  2. Reads result of the command from shared memory and prints it to the console.
  3. If command 'exit' is received, both sender and receiver appllications shall terminate


Server aplication:
  
  INFO: The server application processes command sent by 'sender' trough boost::message_queue and adds/deletes elements 
        to a DynamicString array(from task 2) and writes result of the operation to the shared memory

  1. Reads command from message_queue
  2. On command 'exit' it terminates immediately
  3. On command 'add;string' adds element string to the dynamic string array and writes 'Add OK' to shared memory
  4. On command 'delete;string' deletes element from the dynamic string array and write 'Delete OK/NOK' to shared memory
  5. On command 'get;x' writes the element at index x to the shared memory or 'Not found'
  6. On command 'help' writes all commands and their usages to shared memory
  7. It can be assumed that only one client connects to the server application

Common requirements(direction only, no need to follow as long as the goal is achieved):
  Max message_queue command length is 100 characters 
  max message_queue message number is 100
  message queue name is "academy_ipc_task_mq"
  shared memory name is "academy_ipc_task_sm"
  Shared memory size is 1024 bytes
  
  The following struct to be sent on the message_queue:
  struct MessageQueueRequest
  {
      char command[MAX_COMMAND_LENGTH]{};
  };

Common.h header might be used in your application, but it is not a must.

Hints:
https://www.boost.org/doc/libs/1_46_0/doc/html/boost/interprocess/message_queue.html
https://theboostcpplibraries.com/boost.interprocess-managed-shared-memory

link applications with librt and pthread libraries.
  
  